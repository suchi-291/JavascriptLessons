queryselector works only for one class or attribute at a time, if there are more than one element having same class name we have to use querySelectorAll.


Suppose we want a variable name for the elements of a given class, and there are more than one element with the same class. When we use document.querySelectorAll a nodeList containing all the elements with that class name will get stored in to that variable, it appears like an array, so in order to access each element independently, we have to use loop. 

Consider this code snippet from the project.. there are three buttons with the same class .show-modal. 

const btnsShowModal = document.querySelectorAll('.show-modal');
console.log(btnsShowModal);

for (let i = 0; i < btnsShowModal.length; i++) {
  console.log(btnsShowModal[i].textContent);
}

For multiple classes we can use .classlist method.. for class lists there are a couple of methods, like .remove etc to manipulate classes. For this we do not have to use '.' 


const showModal = function () {
  console.log('Button clicked');
  modal.classList.remove('hidden');
  overlay.classList.remove('hidden');
};

for (let i = 0; i < btnsShowModal.length; i++) {
  console.log(btnsShowModal[i].textContent);

  btnsShowModal[i].addEventListener('click', showModal);
}


//////////////////////////////////////////////////////////////////////////////////////


Even for keyboard events we still need to use "addEventistener"
when we say document.addEventListener - We are listening for events everywhere on the web page. No matter where they happen on the page they will always trigger the event handler that we specify. 




const closeModal = function () {
  modal.classList.add('hidden');
  overlay.classList.add('hidden');
};

